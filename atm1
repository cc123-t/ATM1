#include<stdio.h>
#include<stdlib.h>
#include <string.h>
#include <time.h>


struct Transaction
{
	char username[100];
	time_t timestamp;
	int type;//0-取款，1-存款
	int amount;

	struct Transaction *next;//存放下一个交易结点的地址
};
typedef struct Transaction Transaction;


struct Account
{
	char username[100];
	char password[100];
	int money;
	

	struct Account * next;
};

 struct Account* head=NULL;//指向头结点
 struct Account* tail=NULL;//指向尾结点

 Account * curAccount=NULL;//保存当前账户

//找到返回1，否则返回0
int findAccount(Account a)
{
	Account * curp=head;
	while(curp!=NULL)
	{
		if((strcmp(curp->username,a.username)==0)&&(strcmp(curp->password,a.password)))
		{
			curAccount=curp;
			return 1;
		}
		curp=curp->next;
	}
	return 0;
}
void updatePassword()
{
	printf("请输入旧密码:");
	char formerPassword[100];
	scanf("%s",formerPassword);
	if(strcmp(formerPassword,curAccount->password)==0)
	{
		printf("请输入新密码:");
		scanf("%s",curAccount->password);
		printf("修改成功！\n");
	}
	else
	{
		printf("密码错误！不能更改！\n");
	}
}

void saveMoney()
{
  printf("请输入存款金额：");
  int money;
  scanf("%d",&money);
  
  //数额限制？

  curAccount->money+=money;
  printf("存款成功！\n");

  //记录交易信息

}


void drawMoney()
{
	printf("请输入取款金额：");
	int money;
	scanf("%d",&money);
	if(money<=curAccount->money)
	{
		printf("取款成功！\n");
		curAccount->money-=money;

		//记录交易信息

	}
	else
	{
		printf("余额不足!取款失败\n");
	}

}

void homePage()
{
	system("cls");
	//updatePassword(); 
	//drawMoney();

	saveMoney();
}



void signIn()
{
	int i;
	for(i=0;i<3;i++)
	{
    	Account a;
    	printf("请输入账号：");
    	scanf("%s",a.username);

    	printf("请输入密码：");
    	scanf("%s",a.password);

    	if(findAccount(a)==1)
		{
    		printf("登录成功！\n");
		}
	    else
		{
       		printf("登录失败！\n");
		}

	}
	
}
/**
如果数据加载成功返回1
否则返回0 
*/

//加载成返回1，加载失败返回0
int loadData()
{
	FILE*fp=fopen("D:/atm.txt","r");
	if(fp==NULL)
	{
		return 0;
	}
	else
	{
		while(!feof(fp))
		{
			//创建结点
			Account * newNode=(Account *)malloc(sizeof(Account));

			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s\n",newNode->username,newNode->password);

			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		return 1;
	}
}

int main()
{
	int i=loadData();
	if(i==0)
	{
		printf("加载失败！\n");
	}
	else
	{
		printf("加载成功！\n");
	}
	signIn();

    time_t timestamp = time(NULL);
	printf("%ld\n",timestamp);

	char *ct=ctime(&timestamp);
	printf("%s\n",ct);


	return 0;
}
